{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortType","setState","handleReverse","handleReset","this","newGoods","goods","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,0GAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,SAACF,GAChB,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,cAAgB,WACd,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAZzB,EAgBEM,YAAc,WACZ,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAAiCK,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EAzDH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOD,GAEzB,OAAQR,GACN,KAAKL,EAASe,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKlB,EAASoB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAG3D,KAAKrB,EAASM,MAKhB,OAAIF,EACKU,EAAaQ,UAGfR,EAiCYS,CAAkBtB,EAAiBU,KAAKR,OAEzD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYrB,IAAaL,EAASe,WAGtCY,QAAS,kBAAM,EAAKpB,eAAeP,EAASe,WAR9C,iCAaA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYrB,IAAaL,EAASoB,SAGtCO,QAAS,kBAAM,EAAKpB,eAAeP,EAASoB,SAR9C,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAatB,IAGjBuB,QAAShB,KAAKF,cARhB,sBAaEJ,IAAaL,EAASM,MAAQF,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKD,YAHhB,sBAUJ,oBAAIc,UAAU,aAAd,SACGZ,EAASgB,KAAI,SAAAC,GAAI,OAChB,oBACE,UAAQ,OACRL,UAAU,mBAFZ,SAKIK,GAFGA,eArFnB,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8714157e.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\n\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n type State = {\n   isReversed: boolean,\n   sortType: SortType,\n };\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortType = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const newGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.handleSortType(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.handleSortType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul className=\"goods-list\">\n          {newGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              className=\"goods-list__item\"\n              key={good}\n            >\n              { good }\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}